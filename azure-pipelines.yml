# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

# The whole twine thing is documented here: https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/python?view=azure-devops

trigger:
  branches:
    include:
    - '*'
    - 'refs/tags/*'
  paths:
    exclude:
    - README.md
    - LICENSE
    - .gitignore

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
#    Python36:
#      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install poetry
    poetry install
  displayName: 'Install dependencies'

- script: |
    # pip install pytest pytest-azurepipelines pytest-cov
    poetry run pytest --cov=. --cov-report=xml --cov-report=html
  displayName: 'Testing'

- task: TwineAuthenticate@1
  inputs:
    artifactFeed: 'Meta/twine-feed'
  displayName: 'Authenticate twine'
  
- script: |
    poetry build
  displayName: 'Build'

- script: |
    poetry run twine upload --non-interactive -r "twine-feed" --config-file $(PYPIRC_PATH) dist/*
  displayName: 'Twine upload'
  condition: startsWith(variables['build.sourceBranch'], 'refs/tags/')